#include <Stepper.h>
#include <SevSeg.h>
#include <Keypad.h>
#include <LiquidCrystal.h>

#define RS PM_0
#define RW PM_1
#define EN PM_2
#define D4 PK_4
#define D5 PK_5
#define D6 PK_6
#define D7 PK_7

#define IN1  PH_0
#define IN2  PH_1
#define IN3  PH_2
#define IN4  PH_3

#define D1A PQ_0
#define D1B PQ_1
#define D1C PQ_2
#define D1D PQ_3
#define D1E PA_4
#define D1F PA_5
#define D1G PA_6
#define D1P PA_7
#define TRANSISTOR2 PB_5

#define IN1  PH_0
#define IN2  PH_1
#define IN3  PH_2
#define IN4  PH_3

LiquidCrystal lcd(RS, RW, EN, D4, D5, D6, D7);

const int L0 = PL_0, L1 = PL_1, L2 = PL_2, L3 = PL_3, C0 = PM_4, C1 = PM_5, C2 = PM_6, C3 = PM_7; 
const byte ROWS = 4; 
const byte COLS = 4; 

char hexaKeys[ROWS][COLS] = {
  {'1','2','3','A'},
  {'4','5','6','B'},
  {'7','8','9','C'},
  {'*','0','#','D'}
};
byte rowPins[ROWS] = {L0, L1, L2, L3}; 
byte colPins[COLS] = {C0, C1, C2, C3}; 

Keypad customKeypad = Keypad( makeKeymap(hexaKeys), rowPins, colPins, ROWS, COLS);

byte numDigitos = 1;
byte digitPinos[] = {};
byte pinosDisplay[] = {D1A, D1B, D1C, D1D, D1E, D1F, D1G, D1P};
bool resistores = true;


SevSeg setSeg;

Stepper motorPasso(500, IN1, IN3, IN2, IN4);

char senhas[6][6] = {
  {'1','2','3','4','5','6'},//Senha Lana 1
  {'1','3','5','7','9','6'},//Senha Lana 2
  {'2','2','3','3','3','3'},//Senha Marco 1
  {'1','2','9','4','7','2'},//Senha Marco 2
  {'3','9','3','4','5','6'},//Senha Pedro 1
  {'4','2','6','4','7','6'}//Senha Pedro 2
};

char senhaTeclado[6];
int i = 0, senhaCorreta = 0, senhaIncorreta = 0, donoDaSenha = 0, displayCount = 4;
bool senhaDigitada = false;
bool apagarLinhaInteira = false;
bool voltarMenuSenhas = false;
bool segurarCincoSeg = false;
bool senhaIncorretaFlag = false;
char leitura_teclas;
unsigned long tempo = 0, tempo2 = 0;



void setup() {
  Serial.begin(9600);
  pinMode(D1A, OUTPUT);
  pinMode(D1B, OUTPUT);
  pinMode(D1C, OUTPUT);
  pinMode(D1D, OUTPUT);
  pinMode(D1E, OUTPUT);
  pinMode(D1F, OUTPUT);
  pinMode(D1G, OUTPUT);
  pinMode(D1P, OUTPUT);
  pinMode(TRANSISTOR2, OUTPUT);
  for(int i=0;i<=3; i++){
    pinMode(rowPins[i], INPUT);
    pinMode(colPins[i], INPUT);
  }
  lcd.begin(16, 2);
  lcd.clear();
  lcd.setCursor(0,0);
  lcd.print("Cofre!");
  lcd.setCursor(0,1);
  lcd.print("Microcontrolados");
  delay(1000);
  lcd.clear();
  lcd.setCursor(0,0);
  lcd.print("Bem Vindo!");
  lcd.setCursor(0,1);
  lcd.print("Senha:");
  setSeg.begin(COMMON_CATHODE, numDigitos, digitPinos, pinosDisplay, resistores);
  setSeg.setBrightness(90);
  motorPasso.setSpeed(60);
}

void loop() {
  if(segurarCincoSeg){
    Serial.print("Comecou a girar o motor");
    motorPasso.step(180/0.175781);
    Serial.println("Terminou de girar o motor");
    tempo = millis();
    tempo2 = millis();
    setSeg.refreshDisplay();
    setSeg.setNumber(5);
    voltarMenuSenhas = true;
    segurarCincoSeg = false;
  }
  if(voltarMenuSenhas){
    Serial.println("Entrou no voltar menu senhas");
    if (millis()-tempo >= 7000){
      digitalWrite(TRANSISTOR2, LOW);
      Serial.println("Girando motor de volta a posicao inicial");
      motorPasso.step(-180/0.175781);
      Serial.println("Motor na posicao inicial");
      lcd.clear();
      lcd.setCursor(0,0);
      lcd.print("Bem Vindo!");
      lcd.setCursor(0,1);
      lcd.print("Senha:");
      displayCount = 4;
      voltarMenuSenhas = false;
    }
    else{
      if (millis()-tempo2 >= 1000){
        digitalWrite(TRANSISTOR2, HIGH);
        setSeg.refreshDisplay();
        setSeg.setNumber(displayCount);
        displayCount--;
        tempo2 = millis();
      }
    }
  }
  getSenha();
  checkSenha();
  lcdDonoDaSenha();
  senhaIncorretaFuncao();
}

void getSenha(){
  leitura_teclas = customKeypad.getKey(); //Le o teclado matricial
  while (leitura_teclas != 0 && !voltarMenuSenhas){ //Quando apertam uma tecla entra aqui
    //Serial.println(leitura_teclas);
    //Serial.println(i);
    if (leitura_teclas != '*' && leitura_teclas != '#'){ //Armazena a entrada do teclado matricual em um vetor de 6 posições
      senhaTeclado[i] = leitura_teclas;
      lcd.setCursor(i+6,1); //escreve o *
      lcd.print('*');
      i++;
    }
    if(leitura_teclas == '#'){ //Apaga a senha
      if(apagarLinhaInteira){ //Serve para apagar a linha de baixso do diusplay quando usuário digita mais de 6 caracteres de senha, so entra aqui se o cara digitiar mais de 6 caracteres e apertar #
        for (int m = 0; m <= 15; m++){
          lcd.setCursor(0,1);
          lcd.print("                ");
        }
        lcd.setCursor(0,1);//Reescreve senha no display
        lcd.print("Senha:");
        apagarLinhaInteira = false;
      }
      for(int k = 0; k <=5 ; k++){//apaga as posiçoes do vetor
        senhaTeclado[k] = 0;
        lcd.setCursor(k+6,1);//apaga os * já escritos mas deixa escrito senha
        lcd.print(' ');
      }
      lcd.setCursor(6,1);//volta o cursor para os * da senha
      i = 0;
    }
    if(i == 6 && leitura_teclas == '*'){//é o enter, só entra quando foi digitado 6 numeros e aperta *
      Serial.println("Senha");
      for(int j = 0; j <= 5; j++){//printa a senha no monitor serial só pra acompanhar
        Serial.println(senhaTeclado[j]);
        lcd.setCursor(j+6,1);//apaga os * quando o enter é dado
        lcd.print(' ');
      }
      lcd.setCursor(6,1);//volta o cursor para os * da senha
      i = 0;
      senhaDigitada = true;//serve para a função checksenha saber se foi dado enter para fazer a varredura
    }
    if(i>6){//quando o usuário digita masi de 6 caracteres entra aqui
      for (int m = 0; m <= 15; m++){
        lcd.setCursor(0,1);
        lcd.print("                "); //apaga tiudo que está na lionha de baixo
        lcd.setCursor(0,1);
        lcd.print("Pressione #");//escreve para o usário digitar # para reeescrever a senha 
        apagarLinhaInteira = true;//deixa a variável como true para quando apertar o # e ir lá para o IF do # o display não fique sobreescrito
      }
    }
    leitura_teclas = 0;//reseta a tecla para não ficar preso no while
  }
}

void checkSenha(){
  if(senhaDigitada){//se a senha foi escrita no vetor
    for(int linha = 0; linha <=5; linha++){ //incrementa as linhas da matriz
      senhaCorreta = 0; //sempre inicia a varreduira com a variavel que checa a senha como 0
      for(int coluna = 0; coluna <= 5; coluna++){// faz a varredura da linha incrementando as colunas
        if(senhaTeclado[coluna] == senhas[linha][coluna]){//incrementa 1 quando a senha é igual
          senhaCorreta++;
        }
      }
      if(senhaCorreta == 6){
        Serial.println("Senha Correta");
        donoDaSenha = linha + 1;
        Serial.println(donoDaSenha);
      }
      else{
        senhaIncorreta ++;
        Serial.println("Senha Incorreta");
      }
    }
    senhaCorreta = 0; 
    senhaDigitada = false;
  }
}

void lcdDonoDaSenha(){
  switch (donoDaSenha){
     case 1:
      lcd.clear();
      lcd.setCursor(0,0);
      lcd.print("Senha Correta!");
      lcd.setCursor(0,1);
      lcd.print("Ola Lana");
      Serial.println("Entrou no case 1");
      segurarCincoSeg = true;
      donoDaSenha = 0;
      senhaIncorreta = 0;
      break;
     case 2:
      lcd.clear();
      lcd.setCursor(0,0);
      lcd.print("Senha Correta!");
      lcd.setCursor(0,1);
      lcd.print("Ola Lana");
      segurarCincoSeg = true;
      donoDaSenha = 0;
      senhaIncorreta = 0;
      break;
     case 3:
      lcd.clear();
      lcd.setCursor(0,0);
      lcd.print("Senha Correta!");
      lcd.setCursor(0,1);
      lcd.print("Ola Marco");
      segurarCincoSeg = true;
      donoDaSenha = 0;
      senhaIncorreta = 0;
      break;
     case 4:
      lcd.clear();
      lcd.setCursor(0,0);
      lcd.print("Senha Correta!");
      lcd.setCursor(0,1);
      lcd.print("Ola Marco");
      segurarCincoSeg = true;
      donoDaSenha = 0;
      senhaIncorreta = 0;
      break;
     case 5:
      lcd.clear();
      lcd.setCursor(0,0);
      lcd.print("Senha Correta!");
      lcd.setCursor(0,1);
      lcd.print("Ola Pedro");
      segurarCincoSeg = true;
      donoDaSenha = 0;
      senhaIncorreta = 0;
      break;
     case 6:
      lcd.clear();
      lcd.setCursor(0,0);
      lcd.print("Senha Correta!");
      lcd.setCursor(0,1);
      lcd.print("Ola Pedro");
      segurarCincoSeg = true;
      donoDaSenha = 0;
      senhaIncorreta = 0;
     defaut:
      break; 
  }
}
void senhaIncorretaFuncao(){
  if (senhaIncorreta == 6){
    Serial.println("Esta aquio");
    lcd.clear();
    lcd.setCursor(0,0);
    lcd.print("Senha Incorreta!");
    lcd.setCursor(0,1);
    lcd.print("Aguarde 3 seg");
    delay(3000);
    lcd.clear();
    lcd.setCursor(0,0);
    lcd.print("Bem Vindo!");
    lcd.setCursor(0,1);
    lcd.print("Senha:");
    senhaIncorreta = 0;
  }
}

